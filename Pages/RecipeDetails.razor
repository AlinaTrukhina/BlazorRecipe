@page "/recipe-details/{RecipeId:int}"
@using BlazorRecipe.Models
@using BlazorRecipe.Services
@using System.Text.Json
@using System.Text.Json.Serialization
@inject NavigationManager NavigationManager
@inject HttpClient HttpClient

<h1>Recipe Details</h1>

@if (recipe != null)
{
    <h2>@recipe.Title</h2>
    <p>@recipe.Instructions</p>
    <h3>Ingredients:</h3>
    <ul>
        @foreach (var ingredient in recipe.Ingredients)
        {
            <li>@ingredient</li>
        }
    </ul>
}
else
{
    <p>Recipe not found.</p>
}

@code {
    private SpoonacularRecipe recipe;

    [Parameter]
    public int RecipeId { get; set; }

    protected override async Task OnInitializedAsync()
        {
            recipe = await GetRecipeDetails();
        }

        private async Task<SpoonacularRecipe> GetRecipeDetails()
        {
            var url = $"https://api.spoonacular.com/recipes/{RecipeId}/information?apiKey=YOUR_API_KEY";
            var response = await HttpClient.GetAsync(url);

            if (!response.IsSuccessStatusCode)
            {
                throw new Exception($"Failed to retrieve recipe details for ID {RecipeId}: {response.ReasonPhrase}");
            }

            var content = await response.Content.ReadAsStringAsync();
            var recipeDetails = JsonSerializer.Deserialize<SpoonacularRecipe>(content);

            return recipeDetails;
        }
}
