@page "/search-recipes"
@using System.Net.Http.Headers
@using System.Text.Json
@using System.Text.Json.Serialization
@inject IHttpClientFactory ClientFactory

<PageTitle>Recipe Search</PageTitle>

<h1>Get Data from recipe API</h1>

<form class="recipeSearch">
    <label>
        Search by ingredient: 
        <input type="text" name="searchIngredient">
    </label>
    <button type="submit">Submit</button>
</form>

@if (getResultsError || recipes is null) 
{
    <p>Unable to get info from API</p>
}
else 
{
    <table>
        <thead>
            <tr>
                <th>
                    Title
                </th>
                <th>
                    Photo
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in recipes)
            {
                <tr>
                    <td>@item.Title</td>
                    <td><img src=@item.Image alt=@item.Title></td>
                    <td><a asp-page="recipe" asp-route-recipeId="@item.RecipeId"><button>Details</button></a></td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
        private IEnumerable<APIRecipe>? recipes = Array.Empty<APIRecipe>();
        private bool getResultsError;
        private bool shouldRender;

        protected override bool ShouldRender() => shouldRender;

        protected override async Task OnInitializedAsync() {
            var request = new HttpRequestMessage
            {
                    Method = HttpMethod.Get,
                    RequestUri = new Uri("https://api.spoonacular.com/recipes/findByIngredients?ingredients=apples%2Cflour%2Csugar&ranking=1&ignorePantry=true&number=5"),
                    Headers =
                    {
                        { "x-api-key", "a151019d6e5041dbbee481ab3778e65b" }
                    },
            };

            var client = ClientFactory.CreateClient();
            @* var client = new HttpClient(); *@

            var response = await client.SendAsync(request);
            
            if (response.IsSuccessStatusCode)
            {
                @* var body = await response.Content.ReadAsStringAsync();
                Console.WriteLine(body); *@

                using var responseStream = await response.Content.ReadAsStreamAsync();
                recipes = await JsonSerializer.DeserializeAsync
                <IEnumerable<APIRecipe>>(responseStream);
            }
                @* response.EnsureSuccessStatusCode(); *@
            else
            {
                getResultsError = true;
            }

            shouldRender = true;
            
        }

        public class APIRecipe
        {
            [JsonPropertyName("id")]
            public int? RecipeId { get; set; }

            [JsonPropertyName("title")]
            public string? Title { get; set; }

            [JsonPropertyName("image")]
            public string? Image { get; set; }

        }
}
